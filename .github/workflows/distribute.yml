name: Distribute

on:
  push:
    tags:
      - "v*"

jobs:
  get_version:
    name: Get version
    runs-on: ubuntu-20.04
    steps:
      - name: Set output
        id: set_output
        run: echo ::set-output name=version::${GITHUB_REF#refs/tags/v}
    outputs:
      version: ${{ steps.set_output.outputs.version }}
  test:
    name: Run tests
    runs-on: macos-12
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache SwiftPM packages
        uses: actions/cache@v3
        with:
          path: .build/checkouts
          key: ${{ runner.os }}-spm-${{ hashFiles('Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-spm-${{ hashFiles('Package.resolved') }}
            ${{ runner.os }}-spm-
      - name: Inject version
        run: ./Scripts/version
      - name: Run tests
        run: swift test
  build_macos:
    name: Build (macOS)
    runs-on: macos-12
    needs: [get_version, test]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache SwiftPM packages
        uses: actions/cache@v3
        with:
          path: .build/checkouts
          key: ${{ runner.os }}-spm-${{ hashFiles('Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-spm-${{ hashFiles('Package.resolved') }}
            ${{ runner.os }}-spm-
      - name: Inject version
        run: ./Scripts/version
      - name: Build
        run: make build-macos
      - name: Upload binary
        uses: actions/upload-artifact@v2
        with:
          name: ipatool-macos-v${{ needs.get_version.outputs.version }}
          path: .build/ipatool
          if-no-files-found: error
  build_ios:
    name: Build (iOS)
    runs-on: macos-12
    needs: [get_version, test]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache SwiftPM packages
        uses: actions/cache@v3
        with:
          path: .build/checkouts
          key: ${{ runner.os }}-spm-${{ hashFiles('Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-spm-${{ hashFiles('Package.resolved') }}
            ${{ runner.os }}-spm-
      - name: Inject version
        run: ./Scripts/version
      - name: Install dependencies
        run: brew install xcodegen ldid
      - name: Build
        run: make build-ios
      - name: Upload binary
        uses: actions/upload-artifact@v2
        with:
          name: ipatool-ios-v${{ needs.get_version.outputs.version }}
          path: .build/ipatool
          if-no-files-found: error
  distribute:
    name: Distribute
    runs-on: ubuntu-20.04
    needs: [get_version, build_ios, build_macos]
    steps:
      - name: Download binary (macOS)
        uses: actions/download-artifact@v2
        with:
          name: ipatool-macos-v${{ needs.get_version.outputs.version }}
          path: ipatool-macos-v${{ needs.get_version.outputs.version }}
      - name: Archive binary (macOS)
        run: |
          mv ipatool-macos-v${{ needs.get_version.outputs.version }}/ipatool ipatool
          zip ipatool-macos-v${{ needs.get_version.outputs.version }}.zip ipatool
          rm ipatool
      - name: Upload release (macOS)
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ipatool-macos-v${{ needs.get_version.outputs.version }}.zip
          asset_name: ipatool-macos-v${{ needs.get_version.outputs.version }}.zip
          tag: ${{ github.ref }}
          overwrite: false
      - name: Download binary (iOS)
        uses: actions/download-artifact@v2
        with:
          name: ipatool-ios-v${{ needs.get_version.outputs.version }}
          path: ipatool-ios-v${{ needs.get_version.outputs.version }}
      - name: Archive binary (iOS)
        run: |
          mv ipatool-ios-v${{ needs.get_version.outputs.version }}/ipatool ipatool
          zip ipatool-ios-v${{ needs.get_version.outputs.version }}.zip ipatool
          rm ipatool
      - name: Upload release (iOS)
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ipatool-ios-v${{ needs.get_version.outputs.version }}.zip
          asset_name: ipatool-ios-v${{ needs.get_version.outputs.version }}.zip
          tag: ${{ github.ref }}
          overwrite: false
      - name: Checkout homebrew repo
        uses: actions/checkout@v2
        with:
          repository: ${{ secrets.HOMEBREW_REPO }}
          path: repo
          ref: main
          token: ${{ secrets.GH_TOKEN }}
      - name: Update homebrew repo
        run: |
          SHA256=$(sha256sum ipatool-macos-v${{ needs.get_version.outputs.version }}.zip | awk '{print $1}')
          cd repo
          sed -i "3s/.*/  sha256 \"$SHA256\"/" Casks/ipatool.rb
          sed -i "2s/.*/  version \"${{ needs.get_version.outputs.version }}\"/" Casks/ipatool.rb
          sed -i "5s/.*/  url \"https:\/\/github.com\/majd\/ipatool\/releases\/download\/v${{ needs.get_version.outputs.version }}\/ipatool-macos-v${{ needs.get_version.outputs.version }}.zip\"/" Casks/ipatool.rb
          git config --local user.name ${{ secrets.GH_NAME }}
          git config --local user.email ${{ secrets.GH_EMAIL }}
          git add Casks/ipatool.rb
          git commit -m "Update ipatool to v${{ needs.get_version.outputs.version }}"
          git push "https://${{ secrets.GH_TOKEN }}@github.com/${{ secrets.HOMEBREW_REPO }}.git" --set-upstream "main"
